<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>From-0-to-Crypto-by-Projects on CPE</title><link>https://gogo2464.github.io/gogo-s-blog-cpe/from-0-to-crypto-by-projects/</link><description>Recent content in From-0-to-Crypto-by-Projects on CPE</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Sun, 13 Oct 2024 01:25:30 +0200</lastBuildDate><atom:link href="https://gogo2464.github.io/gogo-s-blog-cpe/from-0-to-crypto-by-projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Episode 1: introduction to cryptography</title><link>https://gogo2464.github.io/gogo-s-blog-cpe/from-0-to-crypto-by-projects/episode-1-introduction/</link><pubDate>Sun, 13 Oct 2024 01:25:30 +0200</pubDate><guid>https://gogo2464.github.io/gogo-s-blog-cpe/from-0-to-crypto-by-projects/episode-1-introduction/</guid><description>&lt;h3 id="approach">Approach&lt;/h3>
&lt;p>In cryptography, there are mathematics but in a very different way than school. Not because it sounds more concreet at all. But because it is about to break theorems (disproof).&lt;/p>
&lt;p>Contrary to memory error issues as any flaw in cyber security, you must have math theorem proving prerequisties.&lt;/p>
&lt;p>If you would like to seriously professionally work in cryptography, you mandatorely need to have these prerequisties.&lt;/p>
&lt;ul>
&lt;li>step 1: math to proove theorems:
&lt;ul>
&lt;li>1: &lt;a href="https://www.people.vcu.edu/~rhammack/BookOfProof/Main.pdf">book fo proof&lt;/a>&lt;/li>
&lt;li>2: or the book: &lt;a href="https://www.amazon.com/How-Prove-Structured-Daniel-Velleman/dp/1108439535/ref=sr_1_1?crid=1G289WGWAXA57&amp;keywords=how+to+prove+it&amp;qid=1685799138&amp;s=books&amp;sprefix=how+to+prov%2Cstripbooks-intl-ship%2C864&amp;sr=1-1">how to proove it&lt;/a> if you prefer. Be carefull: the second book is not free and corrections are only available by third party.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>step 2: theorem prooving focusing on cryptology &lt;a href="https://www.amazon.com/Introduction-Mathematical-Cryptography-Undergraduate-Mathematics/dp/1493939386">math focused:&lt;/a>&lt;/li>
&lt;li>step 3: &lt;a href="https://www.amazon.fr/Cryptanalysis-RSA-Variants-Jason-Hinek/dp/1420075187">congrat!!! because you are now able to read papers focusing on real life issues&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>But the most important remains to do! At thisu point you must have to fly on your own wing on subject that intrest you such as cryptocurencies or peer to peer security!!!&lt;/p></description></item><item><title>Episode 2: Reversing cryptography algorithm made to be unreversables (checksum). Method by mathematical proof: disproof</title><link>https://gogo2464.github.io/gogo-s-blog-cpe/from-0-to-crypto-by-projects/episode-2-proof-demonstration/</link><pubDate>Sun, 13 Oct 2024 01:25:30 +0200</pubDate><guid>https://gogo2464.github.io/gogo-s-blog-cpe/from-0-to-crypto-by-projects/episode-2-proof-demonstration/</guid><description>&lt;h2 id="i---identify">I - Identify&lt;/h2>
&lt;p>According to the documentation and as it is mentionned that type 7 is an hashing algorithm.&lt;/p>
&lt;p>A secure hash algorithm is an hash algorithm so that for any function hash that transform the original (plaintext) value $ hased = H(plain) $ there does not exist a function $ rev(hashed) $ so that $ rev(hashed) = plain $.&lt;/p>
&lt;h2 id="ii---notes">II - Notes:&lt;/h2>
&lt;p>I really definitely insist on this point: &lt;code>It is crucial for a cryptologist to PROOVE his statement. Not just calculating.&lt;/code> If you only calculate, you could reach some proprietary algorithms such as this one but you will never ever be able to code CVE exploits on modern algorithms. I insist in the point you have to read &lt;a href="https://www.people.vcu.edu/~rhammack/BookOfProof/Main.pdf">book fo proof&lt;/a> if you did not do it yet. It is to do theorem proving.&lt;/p></description></item></channel></rss>